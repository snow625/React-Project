{"version":3,"file":"static/js/257.20bd8d15.chunk.js","mappings":"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","sources":["webpack://react-project/./src/modules/RightSideBar/RightSideBar.module.scss?1c94","modules/RightSideBar/RightSideBar.jsx","modules/Diary/DiaryDateСalendar/diaryDateСalendar.module.scss","modules/Diary/DiaryDateСalendar/DiaryDateСalendar.jsx","webpack://react-project/./src/modules/Diary/DiaryAddProductForm/ProductSelector/productSelector.module.css?ce86","modules/Diary/DiaryAddProductForm/ProductSelector/ProductSelector.jsx","webpack://react-project/./src/shared/components/CircleButton/circleButton.module.scss?1740","shared/components/CircleButton/CircleButton.jsx","shared/services/API/product-search.js","modules/Diary/DiaryAddProductForm/initialState.js","modules/Diary/DiaryAddProductForm/fields.js","webpack://react-project/./src/modules/Diary/DiaryAddProductForm/diaryAddProductForm.module.scss?3041","modules/Diary/DiaryAddProductForm/DiaryAddProductForm.jsx","webpack://react-project/./src/modules/Diary/DiaryProductsList/DiaryProductsListItem/diaryProductsListItem.module.scss?c1b8","modules/Diary/DiaryProductsList/DiaryProductsListItem/DiaryProductsListItem.jsx","webpack://react-project/./src/modules/Diary/DiaryProductsList/diaryProductsList.module.scss?21a0","modules/Diary/DiaryProductsList/DiaryProductsList.jsx","webpack://react-project/./src/modules/Diary/diary.module.scss?7f94","modules/Diary/Diary.jsx","webpack://react-project/./src/pages/DiaryPage/diaryPage.module.scss?c2cf","pages/DiaryPage/DiaryPage.jsx","redux/summary/summary-selectors.js","webpack://react-project/./src/shared/components/Button/button.module.scss?9580","shared/components/Button/Button.jsx","webpack://react-project/./src/shared/components/Modal/modal.module.scss?c80f","shared/components/Modal/Modal.jsx","shared/hooks/useForm.js","shared/utils/loadingErrorSetState.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backbox\":\"RightSideBar_backbox__f1uHh\",\"box\":\"RightSideBar_box__5rTAJ\",\"title\":\"RightSideBar_title__b9qBg\",\"flexbox\":\"RightSideBar_flexbox__Ultvk\",\"list\":\"RightSideBar_list__RNeJX\",\"item\":\"RightSideBar_item__0V+B1\",\"sub_title\":\"RightSideBar_sub_title__A7b6T\",\"text\":\"RightSideBar_text__J6xPs\",\"ol\":\"RightSideBar_ol__xwjjx\",\"li\":\"RightSideBar_li__bdv0f\"};","import style from \"./RightSideBar.module.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  summary,\r\n  getdate,\r\n  getFoodNotRecommended,\r\n} from \"../../redux/summary/summary-selectors\";\r\n\r\nconst RightSideBar = () => {\r\n  const daySummary = useSelector(summary);\r\n  const currentDate = useSelector(getdate);\r\n  const foodNotRecommended = useSelector(getFoodNotRecommended);\r\n\r\n  const newCurrentDate = () => {\r\n    if (currentDate) {\r\n      const a = currentDate.split(\"\");\r\n      a.splice(4, 1, \"/\");\r\n      const b = a;\r\n      b.splice(7, 1, \"/\");\r\n\r\n      return b.join(\"\");\r\n    }\r\n    return;\r\n  };\r\n\r\n  const newSummary = () => {\r\n    if (daySummary.kcalLeft) {\r\n      const dataValuesToMathFloor = {};\r\n\r\n      Object.entries(daySummary).forEach(([key, value]) => {\r\n        dataValuesToMathFloor[key] = Math.floor(value);\r\n      });\r\n\r\n      const { kcalLeft, kcalConsumed, dailyRate, percentsOfDailyRate } =\r\n        dataValuesToMathFloor;\r\n\r\n      return {\r\n        kcalLeft,\r\n        kcalConsumed,\r\n        dailyRate,\r\n        percentsOfDailyRate,\r\n      };\r\n    }\r\n    return {\r\n      kcalLeft: \"000\",\r\n      kcalConsumed: \"000\",\r\n      dailyRate: \"000\",\r\n      percentsOfDailyRate: \"000\",\r\n    };\r\n  };\r\n\r\n  const foodNotRecommendedList = () => {\r\n    const elements = foodNotRecommended.map((el) => (\r\n      <li className={style.li} key={el}>\r\n        {el}\r\n      </li>\r\n    ));\r\n\r\n    return <ol className={style.ol}>{elements}</ol>;\r\n  };\r\n\r\n  const { kcalLeft, kcalConsumed, dailyRate, percentsOfDailyRate } =\r\n    newSummary();\r\n\r\n  return (\r\n    <>\r\n      <div className={style.backbox}>\r\n        <div className={style.box}>\r\n          <div className={style.summary}>\r\n            <h3 className={style.title}>{`Сводка за ${newCurrentDate()}`}</h3>\r\n            <div className={style.flexbox}>\r\n              <ul className={style.list}>\r\n                <li className={style.item}>Осталось</li>\r\n                <li className={style.item}>Употреблено</li>\r\n                <li className={style.item}>Дневная норма</li>\r\n                <li className={style.item}>% от нормы</li>\r\n              </ul>\r\n\r\n              <ul className={style.list}>\r\n                <li className={style.item}>\r\n                  <span className=\"{style.number}\">{kcalLeft}</span> ккал\r\n                </li>\r\n                <li className={style.item}>\r\n                  <span className=\"{style.number}\">{kcalConsumed}</span> ккал\r\n                </li>\r\n                <li className={style.item}>\r\n                  <span className=\"{style.number}\">{dailyRate}</span> ккал\r\n                </li>\r\n                <li className={style.item}>\r\n                  <span className=\"{style.number}\">{percentsOfDailyRate}</span>{\" \"}\r\n                  %\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className={style.food}>\r\n            <h3 className={style.sub_title}>Нерекомендуемые продукты:</h3>\r\n            {foodNotRecommended.length > 0 ? (\r\n              foodNotRecommendedList()\r\n            ) : (\r\n              <p className={style.text}>Здесь будет отображаться Ваш рацион</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RightSideBar;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"diaryDateСalendar_wrapper__1gq55\",\"datePicker\":\"diaryDateСalendar_datePicker__FksKS\",\"icon\":\"diaryDateСalendar_icon__cZyaP\"};","import { useEffect, useState } from \"react\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport sprite from \"../../../assets/svg/sprite.svg\";\r\nimport styles from \"./diaryDateСalendar.module.scss\";\r\n\r\nconst DiaryDateCalendar = ({ fetchDayInfo }) => {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n\r\n  const prepareDate = (dateOld) => {\r\n    return { date: dateOld.toISOString().slice(0, 10) };\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDayInfo(prepareDate(startDate));\r\n  }, [fetchDayInfo, startDate]);\r\n\r\n  return (\r\n    <div className=\"wrapper_container\">\r\n      <div className={styles.wrapper}>\r\n        <DatePicker\r\n          className={styles.datePicker}\r\n          selected={startDate}\r\n          onChange={(date) => setStartDate(date)}\r\n          dateFormat=\"dd.MM.yyyy\"\r\n        />\r\n        <svg className={styles.icon}>\r\n          <use href={sprite + \"#icon-calendar\"}></use>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiaryDateCalendar;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"select\":\"productSelector_select__gPhvF\"};","import PropTypes from \"prop-types\";\r\nimport styles from \"./productSelector.module.css\";\r\n\r\nconst ProductSelector = ({ list, onChange }) => {\r\n  const preparedList = list.length > 10 ? list.slice(0, 10) : list;\r\n  const elements = preparedList.map((product) => {\r\n    const { _id, title } = product;\r\n    const { ru } = title;\r\n    return (\r\n      <option key={_id} id={_id} value={ru}>\r\n        {ru}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  const selectHandler = ({ target }) => {\r\n    const { value } = target;\r\n    onChange(value);\r\n  };\r\n\r\n  return (\r\n    <select className={styles.select} onChange={selectHandler}>\r\n      {elements}\r\n    </select>\r\n  );\r\n};\r\n\r\nProductSelector.defaultProps = {\r\n  list: [],\r\n  onChange: () => {},\r\n};\r\n\r\nProductSelector.propTypes = {\r\n  list: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      _id: PropTypes.string.isRequired,\r\n      title: PropTypes.shape({\r\n        ru: PropTypes.string.isRequired,\r\n      }),\r\n    })\r\n  ).isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ProductSelector;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"circleButton_btn__2aj1H\",\"mobile\":\"circleButton_mobile__5dTLh\",\"icon\":\"circleButton_icon__AB0yh\"};","import PropTypes from \"prop-types\";\r\nimport sprite from \"../../../assets/svg/sprite.svg\";\r\nimport styles from \"./circleButton.module.scss\";\r\n\r\nconst CircleButton = ({ type, label, mobile, iconNameInSprite, onClick }) => {\r\n  const chooseClass = () => {\r\n    return mobile ? `${styles.btn} ${styles.mobile}` : styles.btn;\r\n  };\r\n  return (\r\n    <button\r\n      className={chooseClass()}\r\n      type={type}\r\n      aria-label={label}\r\n      onClick={onClick}\r\n    >\r\n      <svg className={styles.icon}>\r\n        <use href={sprite + `#icon-${iconNameInSprite}`}></use>\r\n      </svg>\r\n    </button>\r\n  );\r\n};\r\n\r\nCircleButton.defaultProps = {\r\n  type: \"button\",\r\n  label: \"Button\",\r\n  mobile: false,\r\n  onClick: () => {},\r\n};\r\n\r\nCircleButton.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  mobile: PropTypes.bool.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CircleButton;\r\n","import { instance } from \"./auth\";\r\n\r\nexport const searchProduct = async (query) => {\r\n  const { data } = await instance.get(`/product?search=${query}`);\r\n  return data;\r\n};\r\n","const initialState = {\r\n  product: \"\",\r\n  foundProducts: [],\r\n  currentProduct: \"\",\r\n  id: null,\r\n  weight: \"\",\r\n  error: null,\r\n  loading: false,\r\n};\r\nexport default initialState;\r\n","const fields = {\r\n  product: {\r\n    name: \"product\",\r\n    required: true,\r\n    type: \"text\",\r\n    autoComplete: \"off\",\r\n    id: \"product\",\r\n  },\r\n  weight: {\r\n    name: \"weight\",\r\n    id: \"weight\",\r\n    required: true,\r\n    type: \"number\",\r\n    min: \"1\",\r\n    max: \"3000\",\r\n    title: \"Input weight product in (gram)\",\r\n  },\r\n};\r\n\r\nexport default fields;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"addForm\":\"diaryAddProductForm_addForm__6LUsR\",\"mobileAddForm\":\"diaryAddProductForm_mobileAddForm__GGTHk\",\"wrapperProduct\":\"diaryAddProductForm_wrapperProduct__hr9La\",\"wrapperGrams\":\"diaryAddProductForm_wrapperGrams__4Ji+U\",\"label\":\"diaryAddProductForm_label__g2eLt\",\"labelGrams\":\"diaryAddProductForm_labelGrams__sdZQs\",\"input\":\"diaryAddProductForm_input__3k+X3\",\"addBtn\":\"diaryAddProductForm_addBtn__73b0n\"};","import { useEffect } from \"react\";\r\n\r\nimport ProductSelector from \"./ProductSelector/ProductSelector\";\r\nimport CircleButton from \"../../../shared/components/CircleButton/CircleButton\";\r\nimport Button from \"../../../shared/components/Button\";\r\nimport useForm from \"../../../shared/hooks/useForm\";\r\nimport { searchProduct } from \"../../../shared/services/API/product-search\";\r\nimport {\r\n  loadingState,\r\n  errorState,\r\n} from \"../../../shared/utils/loadingErrorSetState\";\r\nimport { errorChecker } from \"../../../shared/utils/randomFunctions\";\r\nimport Loader from \"../../../shared/components/Loader/Loader\";\r\n\r\nimport initialState from \"./initialState\";\r\nimport fields from \"./fields\";\r\n\r\nimport styles from \"./diaryAddProductForm.module.scss\";\r\n\r\nconst DiaryAddProductForm = ({ isMobile, onSubmit }) => {\r\n  const { state, setState, handleChange, handleSubmit } = useForm({\r\n    onSubmit,\r\n    initialState,\r\n    isReset: true,\r\n  });\r\n  const { product, foundProducts, currentProduct, weight, loading, error } =\r\n    state;\r\n\r\n  const handleFocus = () => {\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        foundProducts: [],\r\n        currentProduct: \"\",\r\n        id: null,\r\n      };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const findProduct = async (product) => {\r\n      setState(loadingState);\r\n      try {\r\n        const result = await searchProduct(product);\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          foundProducts: result,\r\n          loading: false,\r\n        }));\r\n      } catch (error) {\r\n        setState((prevState) => {\r\n          return errorState(prevState, error);\r\n        });\r\n      }\r\n    };\r\n\r\n    if (currentProduct) {\r\n      return;\r\n    }\r\n    if (product.length > 2) {\r\n      findProduct(product);\r\n    }\r\n  }, [product, currentProduct, setState]);\r\n\r\n  const setCurrentProduct = (selectedProduct) => {\r\n    const requiredId = foundProducts.find(\r\n      (product) => product.title.ru === selectedProduct\r\n    )._id;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      product: selectedProduct,\r\n      currentProduct: selectedProduct,\r\n      foundProducts: [],\r\n      id: requiredId,\r\n    }));\r\n  };\r\n  return (\r\n    <div className=\"wrapper_container\">\r\n      <form\r\n        className={isMobile ? styles.mobileAddForm : styles.addForm}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className={styles.wrapperProduct}>\r\n          <label htmlFor={\"product\"} className={styles.label}>\r\n            Введите название продукта\r\n          </label>\r\n          <input\r\n            className={styles.input}\r\n            value={product}\r\n            onChange={handleChange}\r\n            onFocus={handleFocus}\r\n            {...fields.product}\r\n          />\r\n          {foundProducts.length > 0 && (\r\n            <ProductSelector\r\n              list={foundProducts}\r\n              onChange={setCurrentProduct}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className={styles.wrapperGrams}>\r\n          <label htmlFor={\"weight\"} className={styles.labelGrams}>\r\n            Grams\r\n          </label>\r\n          <input\r\n            className={styles.input}\r\n            value={weight}\r\n            onChange={handleChange}\r\n            {...fields.weight}\r\n          />\r\n        </div>\r\n        {isMobile ? (\r\n          <div className={styles.addBtn}>\r\n            <Button type=\"submit\" text=\"Add\" white={false} />\r\n          </div>\r\n        ) : (\r\n          <CircleButton\r\n            type=\"submit\"\r\n            label=\"Add product button\"\r\n            iconNameInSprite=\"add\"\r\n          />\r\n        )}\r\n      </form>\r\n      {loading && <Loader />}\r\n      {error && errorChecker(error)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiaryAddProductForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"diaryProductsListItem_listItem__sfxH7\",\"item\":\"diaryProductsListItem_item__wfLrd\",\"calories\":\"diaryProductsListItem_calories__GzQnx\",\"grams\":\"diaryProductsListItem_grams__UeXqj\",\"product\":\"diaryProductsListItem_product__KiujG\",\"btn\":\"diaryProductsListItem_btn__2B-43\",\"doubleBtn\":\"diaryProductsListItem_doubleBtn__rHUgW\",\"icon\":\"diaryProductsListItem_icon__kttsa\"};","import PropTypes from \"prop-types\";\r\nimport sprite from \"../../../../assets/svg/sprite.svg\";\r\nimport styles from \"./diaryProductsListItem.module.scss\";\r\n\r\nconst DiaryListItem = ({ title, weight, kcal, id, onClick }) => {\r\n  return (\r\n    <li className={styles.listItem} key={id}>\r\n      <span className={styles.product}>{title}</span>\r\n      <span className={styles.grams}>{weight}</span>\r\n      <span className={styles.calories}>{Math.round(kcal)} kcal</span>\r\n      <button\r\n        className={title.length > 24 ? styles.doubleBtn : styles.btn}\r\n        onClick={() => onClick(id)}\r\n        aria-label=\"button delete element\"\r\n      >\r\n        <svg className={styles.icon}>\r\n          <use href={sprite + \"#icon-remove\"}></use>\r\n        </svg>\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nDiaryListItem.propTypes = {\r\n  eatenProducts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      weight: PropTypes.number.isRequired,\r\n      kcal: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default DiaryListItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"diaryProductsList_list__HbP9-\",\"warn\":\"diaryProductsList_warn__wziG9\"};","import DiaryProductsListItem from \"./DiaryProductsListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./diaryProductsList.module.scss\";\r\n\r\nconst DiaryProductsList = ({ eatenProducts, onClick }) => {\r\n  const productAnswer = () => {\r\n    if (eatenProducts.length > 0) {\r\n      const elements = eatenProducts.map(({ title, weight, kcal, id }) => (\r\n        <DiaryProductsListItem\r\n          onClick={onClick}\r\n          key={id}\r\n          title={title}\r\n          weight={weight}\r\n          kcal={kcal}\r\n          id={id}\r\n        />\r\n      ));\r\n      return <ul className={styles.list}>{elements.reverse()}</ul>;\r\n    }\r\n    return <p className={styles.warn}>List empty, add new product</p>;\r\n  };\r\n\r\n  return <div className=\"wrapper_container\">{productAnswer()}</div>;\r\n};\r\n\r\nDiaryProductsList.defaultProps = {\r\n  eatenProducts: [],\r\n};\r\n\r\nDiaryProductsList.propTypes = {\r\n  eatenProducts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      weight: PropTypes.number.isRequired,\r\n      kcal: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default DiaryProductsList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"diary_wrapper__XjRIh\",\"btn\":\"diary_btn__-pfQA\"};","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useMediaPredicate } from \"react-media-hook\";\r\n\r\nimport DiaryDateCalendar from \"./DiaryDateСalendar/DiaryDateСalendar\";\r\nimport DiaryAddProductForm from \"./DiaryAddProductForm/DiaryAddProductForm\";\r\nimport DiaryProductsList from \"./DiaryProductsList\";\r\nimport CircleButton from \"../../shared/components/CircleButton/CircleButton\";\r\nimport Loader from \"../../shared/components/Loader/Loader\";\r\nimport Modal from \"../../shared/components/Modal\";\r\n\r\nimport { useModal } from \"../../shared/hooks/useModal\";\r\nimport { errorChecker } from \"../../shared/utils/randomFunctions\";\r\nimport { toggleModalRedux } from \"../../redux/modal/modal-slice\";\r\n\r\nimport {\r\n  addProduct,\r\n  dayInfo,\r\n  removeProduct,\r\n} from \"../../redux/summary/summary-operations\";\r\n\r\nimport { getSummary } from \"../../redux/summary/summary-selectors\";\r\n\r\nimport { setDate } from \"../../redux/summary/summary-slice\";\r\nimport styles from \"./diary.module.scss\";\r\n\r\nconst Diary = () => {\r\n  const isModalOpen = useModal();\r\n  const dispatch = useDispatch();\r\n  // const navigate = useNavigate();\r\n\r\n  const mobile = useMediaPredicate(\"(max-width: 768px)\");\r\n\r\n  const summaryRedux = useSelector(getSummary);\r\n  const { loading, error, eatenProducts, dayId, date } = summaryRedux;\r\n\r\n  const getDayInfo = useCallback(\r\n    (data) => {\r\n      dispatch(setDate(data));\r\n      dispatch(dayInfo(data));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const addNewProduct = (productData) => {\r\n    const { id, weight } = productData;\r\n    const updatedWeight = Number(weight);\r\n    const totalProductInfo = {\r\n      productId: id,\r\n      weight: updatedWeight,\r\n      date,\r\n    };\r\n    dispatch(addProduct(totalProductInfo));\r\n    if (mobile) {\r\n      dispatch(toggleModalRedux());\r\n    }\r\n  };\r\n\r\n  const deleteProductItem = useCallback(\r\n    (id) => {\r\n      const data = {\r\n        dayId,\r\n        eatenProductId: id,\r\n      };\r\n      dispatch(removeProduct(data));\r\n    },\r\n    [dayId, dispatch]\r\n  );\r\n\r\n  // const relogin = (error) => {\r\n  //   if (error?.status === 401) {\r\n  //     navigate(\"/login\");\r\n  //   }\r\n  // };\r\n\r\n  const mobileCircleBtnClick = () => {\r\n    dispatch(toggleModalRedux());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.wrapper}>\r\n        <DiaryDateCalendar fetchDayInfo={getDayInfo} />\r\n        <DiaryAddProductForm isMobile={false} onSubmit={addNewProduct} />\r\n        <DiaryProductsList\r\n          eatenProducts={eatenProducts}\r\n          onClick={deleteProductItem}\r\n        />\r\n        <div className={styles.btn}>\r\n          <CircleButton\r\n            type=\"button\"\r\n            label=\"Add product button\"\r\n            mobile={true}\r\n            iconNameInSprite=\"add\"\r\n            onClick={mobileCircleBtnClick}\r\n          />\r\n        </div>\r\n      </div>\r\n      {error && errorChecker(error)}\r\n      {loading && <Loader />}\r\n      {isModalOpen && (\r\n        <Modal>\r\n          <DiaryAddProductForm isMobile={true} onSubmit={addNewProduct} />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Diary;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"diaryPage_wrapper__3dexS\",\"diary\":\"diaryPage_diary__DOxYG\"};","import Diary from \"../../modules/Diary/Diary\";\r\nimport RightSideBar from \"../../modules/RightSideBar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getErrorLoadingSummary } from \"../../redux/summary/summary-selectors\";\r\nimport { errorChecker } from \"../../shared/utils/randomFunctions\";\r\n\r\nimport style from \"./diaryPage.module.scss\";\r\nconst DiaryPage = () => {\r\n  const { error } = useSelector(getErrorLoadingSummary);\r\n\r\n  return (\r\n    <>\r\n      <div className={style.wrapper}>\r\n        <div className={style.diary}>\r\n          <Diary />\r\n        </div>\r\n\r\n        <RightSideBar />\r\n      </div>\r\n      {error && errorChecker(error)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiaryPage;\r\n","export const getSummary = (store) => {\r\n  return store.summary;\r\n};\r\nexport const summary = (store) => {\r\n  return store.summary.summary;\r\n};\r\nexport const getdate = (store) => {\r\n  return store.summary.date;\r\n};\r\nexport const getErrorLoadingSummary = (store) => {\r\n  return { loading: store.summary.loading, error: store.summary.error };\r\n};\r\n\r\nexport const getFoodNotRecommended = (store) => {\r\n  return store.summary.notAllowedProducts;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__GLfzt\",\"btn_white\":\"button_btn_white__vYoLr\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./button.module.scss\";\r\n\r\nconst Button = (props) => {\r\n  const { type, text, onClick, white } = props;\r\n  const setClass = () => {\r\n    return white? s.btn_white : s.btn;\r\n  }\r\n  return (\r\n    <button className={setClass()} onClick={onClick} type={type}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  white: false,\r\n  type: \"submit\",\r\n  onClick: () => {},\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"modal_overlay__R++hW\",\"modal\":\"modal_modal__2Pbuy\",\"close_btn\":\"modal_close_btn__DTBAR\",\"container\":\"modal_container__Jd1Z7\",\"close_icon\":\"modal_close_icon__mvDI0\"};","import { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleModalRedux } from \"../../../redux/modal/modal-slice\";\r\n\r\nimport style from \"./modal.module.scss\";\r\nimport sprite from \"../../../assets/svg/sprite.svg\";\r\n\r\nconst modalPlace = document.getElementById(\"modal-root\");\r\n\r\nconst Modal = ({ children }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    document.body.style.overflow = \"hidden\";\r\n    document.addEventListener(\"keydown\", handleClose);\r\n\r\n    const remove = () => {\r\n      document.removeEventListener(\"keydown\", handleClose);\r\n      document.body.style.overflow = \"\";\r\n    };\r\n    return () => remove();\r\n  }, []);\r\n\r\n  const onClose = () => {\r\n    dispatch(toggleModalRedux());\r\n  };\r\n\r\n  function handleClose(event) {\r\n    const { target, currentTarget, code } = event;\r\n    if (target === currentTarget || code === \"Escape\") {\r\n      onClose();\r\n    }\r\n  }\r\n\r\n  return createPortal(\r\n    <div onClick={handleClose} className={style.overlay}>\r\n      <div className={style.modal}>\r\n        <button\r\n          className={style.close_btn}\r\n          type=\"button\"\r\n          aria-label=\"button close\"\r\n          onClick={onClose}\r\n        >\r\n          <svg className={style.close_icon}>\r\n            <use href={sprite + \"#icon-close\"} />\r\n          </svg>\r\n        </button>\r\n        <div className={style.container}>{children}</div>\r\n      </div>\r\n    </div>,\r\n    modalPlace\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useForm = ({ onSubmit, initialState, isReset }) => {\r\n  const [state, setState] = useState({ ...initialState });\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { name, value, type, checked } = target;\r\n    const newValue = type === \"checkbox\" ? checked : value;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: newValue,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({ ...state });\r\n    if (isReset) {\r\n      setState({ ...initialState });\r\n    }\r\n  };\r\n\r\n  return { state, setState, handleChange, handleSubmit };\r\n};\r\n\r\nuseForm.defaultProps = {\r\n  onSubmit: () => {},\r\n  initialState: {},\r\n  isReset: true,\r\n};\r\n\r\nuseForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  initialState: PropTypes.shape.isRequired,\r\n  isReset: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default useForm;\r\n","export const loadingState = (prevState) => ({\r\n  ...prevState,\r\n  error: null,\r\n  loading: true,\r\n});\r\n\r\nexport const errorState = (prevState, error) => ({\r\n  ...prevState,\r\n  loading: false,\r\n  error: {\r\n    message: error.response.data.message,\r\n    status: error.response.status,\r\n  },\r\n});\r\n"],"names":["daySummary","useSelector","summary","currentDate","getdate","foodNotRecommended","getFoodNotRecommended","kcalLeft","dataValuesToMathFloor","Object","entries","forEach","key","value","Math","floor","kcalConsumed","dailyRate","percentsOfDailyRate","newSummary","className","style","a","split","splice","b","join","newCurrentDate","length","elements","map","el","foodNotRecommendedList","fetchDayInfo","useState","Date","startDate","setStartDate","useEffect","date","toISOString","slice","styles","selected","onChange","dateFormat","href","sprite","ProductSelector","list","product","_id","ru","title","id","target","defaultProps","CircleButton","type","label","mobile","iconNameInSprite","onClick","searchProduct","query","instance","data","foundProducts","currentProduct","weight","error","loading","name","required","autoComplete","min","max","isMobile","onSubmit","useForm","initialState","isReset","state","setState","handleChange","handleSubmit","findProduct","loadingState","result","prevState","errorState","htmlFor","onFocus","fields","selectedProduct","requiredId","find","Button","text","white","Loader","errorChecker","kcal","round","DiaryProductsList","eatenProducts","DiaryProductsListItem","reverse","productAnswer","isModalOpen","useModal","dispatch","useDispatch","useMediaPredicate","summaryRedux","getSummary","dayId","getDayInfo","useCallback","setDate","dayInfo","addNewProduct","productData","totalProductInfo","productId","Number","addProduct","toggleModalRedux","deleteProductItem","eatenProductId","removeProduct","Modal","getErrorLoadingSummary","RightSideBar","store","notAllowedProducts","props","s","modalPlace","document","getElementById","children","body","overflow","addEventListener","handleClose","removeEventListener","onClose","event","currentTarget","code","createPortal","checked","newValue","e","preventDefault","propTypes","PropTypes","message","response","status"],"sourceRoot":""}