{"version":3,"file":"static/js/359.9217c817.chunk.js","mappings":"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","sources":["modules/RegisterForm/fields.js","modules/RegisterForm/initialState.js","webpack://react-project/./src/modules/RegisterForm/registerForm.module.scss?f473","modules/RegisterForm/RegisterForm.jsx","webpack://react-project/./src/pages/RegisterPage/registrerPage.module.scss?0312","pages/RegisterPage/RegisterPage.jsx","webpack://react-project/./src/shared/components/Button/button.module.scss?9580","shared/components/Button/Button.jsx","webpack://react-project/./src/shared/components/TextField/textField.module.scss?b90a","shared/components/TextField/TextField.jsx","shared/hooks/useForm.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["const fields = {\r\n  name: {\r\n    label: \"Имя *\",\r\n    name: \"username\",\r\n    required: true,\r\n    type: \"text\",\r\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\r\n    minLength: 3,\r\n    maxLength: 254,\r\n    title: \"Введите имя на английском\",\r\n  },\r\n  email: {\r\n    label: \"Email *\",\r\n    name: \"email\",\r\n    required: true,\r\n    type: \"email\",\r\n    minLength: 3,\r\n    maxLength: 254,\r\n    pattern: \"[^@]+@[^@]+.[a-zA-Z]{2,6}\",\r\n    title: \"Введите email, например: test@gmail.com\",\r\n  },\r\n  password: {\r\n    label: \"Пароль *\",\r\n    name: \"password\",\r\n    required: true,\r\n    type: \"password\",\r\n    minLength: 8,\r\n    maxLength: 100,\r\n    pattern: \"(?=.*[0-9])(?=.*[a-z]|[0-9]).{7,}\",\r\n    title: \"Введите пароль, например: qwerty123\",\r\n  },\r\n};\r\n\r\nexport default fields;\r\n","const initialState = {\r\n  username: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nexport default initialState;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button_wrapper\":\"registerForm_button_wrapper__BYHLd\",\"form_wrapper\":\"registerForm_form_wrapper__OTMmw\"};","import { useNavigate } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport useForm from \"../../shared/hooks/useForm\";\r\nimport TextField from \"../../shared/components/TextField/TextField\";\r\nimport Button from \"../../shared/components/Button\";\r\nimport fields from \"./fields\";\r\nimport initialState from \"./initialState\";\r\n\r\nimport style from \"./registerForm.module.scss\";\r\n\r\nconst RegisterForm = ({ onSubmit }) => {\r\n  const { state, handleChange, handleSubmit } = useForm({\r\n    onSubmit,\r\n    initialState,\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n  const handleClick = () => {\r\n    return navigate(\"/login\");\r\n  };\r\n\r\n  const { username, email, password } = state;\r\n\r\n  return (\r\n    <form className={style.form_wrapper} onSubmit={handleSubmit}>\r\n      <TextField onChange={handleChange} value={username} {...fields.name} />\r\n      <TextField onChange={handleChange} value={email} {...fields.email} />\r\n      <TextField\r\n        onChange={handleChange}\r\n        value={password}\r\n        {...fields.password}\r\n      />\r\n      <div className={style.button_wrapper}>\r\n        <Button type=\"submit\" text=\"Создать\" />\r\n        <Button onClick={handleClick} type=\"button\" text=\"Войти\" white=\"true\" />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nRegisterForm.defaultProps = {\r\n  onSubmit: () => {},\r\n};\r\n\r\nRegisterForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default RegisterForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"registrerPage_wrapper__-U+CP\",\"title\":\"registrerPage_title__ua-Z3\"};","import { useCallback, useEffect } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { createNewUser } from \"../../redux/auth/auth-operations\";\r\nimport RegisterForm from \"../../modules/RegisterForm/RegisterForm\";\r\nimport Loader from \"../../shared/components/Loader/Loader\";\r\nimport { errorChecker } from \"../../shared/utils/randomFunctions\";\r\nimport { getErrorLoadingAuth, userName } from \"../../redux/auth/auth-selectors\";\r\n\r\nimport style from \"./registrerPage.module.scss\";\r\n\r\nconst RegisterPage = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { loading, error } = useSelector(getErrorLoadingAuth);\r\n  const RegisterOk = useSelector(userName);\r\n\r\n  useEffect(() => {\r\n    const checkRegistered = () => {\r\n      return navigate(\"/login\");\r\n    };\r\n    if (RegisterOk) {\r\n      checkRegistered();\r\n    }\r\n  }, [RegisterOk, navigate]);\r\n\r\n  const onSubmit = useCallback(\r\n    (userData) => {\r\n      dispatch(createNewUser(userData));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <div className={`container ${style.wrapper}`}>\r\n      <h2 className={style.title}>Регистрация:</h2>\r\n      <RegisterForm onSubmit={onSubmit} />\r\n      {error && errorChecker(error)}\r\n      {loading && <Loader />}\r\n    </div>\r\n  );\r\n};\r\nexport default RegisterPage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__GLfzt\",\"btn_white\":\"button_btn_white__vYoLr\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./button.module.scss\";\r\n\r\nconst Button = (props) => {\r\n  const { type, text, onClick, white } = props;\r\n  const setClass = () => {\r\n    return white? s.btn_white : s.btn;\r\n  }\r\n  return (\r\n    <button className={setClass()} onClick={onClick} type={type}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  white: false,\r\n  type: \"submit\",\r\n  onClick: () => {},\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"textField_wrapper__dn2JP\",\"label\":\"textField_label__cowtJ\",\"input\":\"textField_input__rq8NX\"};","import { nanoid } from \"@reduxjs/toolkit\";\r\nimport { useMemo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport style from \"./textField.module.scss\";\r\n\r\nconst TextField = (props) => {\r\n  const {\r\n    label,\r\n    name,\r\n    value,\r\n    onChange,\r\n    placeholder,\r\n    required,\r\n    type,\r\n    pattern,\r\n    title,\r\n    minLength,\r\n    maxLength,\r\n    min,\r\n    max,\r\n  } = props;\r\n\r\n  const id = useMemo(() => nanoid(), []);\r\n\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <input\r\n        onChange={onChange}\r\n        id={id}\r\n        className={style.input}\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        placeholder={placeholder}\r\n        required={required}\r\n        pattern={pattern}\r\n        title={title}\r\n        minLength={minLength}\r\n        maxLength={maxLength}\r\n        min={min}\r\n        max={max}\r\n      />\r\n      <label htmlFor={id} className={style.label}>\r\n        {label}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\nTextField.defaultProps = {\r\n  type: \"text\",\r\n  required: true,\r\n  onChange: () => {},\r\n};\r\n\r\nTextField.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  required: PropTypes.bool.isRequired,\r\n  value: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n    PropTypes.bool,\r\n  ]).isRequired,\r\n  placeholder: PropTypes.string,\r\n  pattern: PropTypes.string,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default TextField;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useForm = ({ onSubmit, initialState, isReset }) => {\r\n  const [state, setState] = useState({ ...initialState });\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { name, value, type, checked } = target;\r\n    const newValue = type === \"checkbox\" ? checked : value;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: newValue,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({ ...state });\r\n    if (isReset) {\r\n      setState({ ...initialState });\r\n    }\r\n  };\r\n\r\n  return { state, setState, handleChange, handleSubmit };\r\n};\r\n\r\nuseForm.defaultProps = {\r\n  onSubmit: () => {},\r\n  initialState: {},\r\n  isReset: true,\r\n};\r\n\r\nuseForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  initialState: PropTypes.shape.isRequired,\r\n  isReset: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default useForm;\r\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["name","label","required","type","pattern","minLength","maxLength","title","email","password","username","RegisterForm","onSubmit","useForm","initialState","state","handleChange","handleSubmit","navigate","useNavigate","className","style","TextField","onChange","value","fields","Button","text","onClick","white","defaultProps","dispatch","useDispatch","useSelector","getErrorLoadingAuth","loading","error","RegisterOk","userName","useEffect","useCallback","userData","createNewUser","errorChecker","Loader","props","s","placeholder","min","max","id","useMemo","nanoid","htmlFor","isReset","useState","setState","target","checked","newValue","prevState","e","preventDefault","propTypes","PropTypes","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}