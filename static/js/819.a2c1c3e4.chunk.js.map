{"version":3,"file":"static/js/819.a2c1c3e4.chunk.js","mappings":"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","sources":["webpack://react-project/./src/modules/RightSideBar/RightSideBar.module.scss?1c94","modules/RightSideBar/RightSideBar.jsx","modules/Diary/DiaryDateСalendar/diaryDateСalendar.module.scss","modules/Diary/DiaryDateСalendar/DiaryDateСalendar.jsx","webpack://react-project/./src/shared/components/CircleButton/circleButton.module.scss?1740","shared/components/CircleButton/CircleButton.jsx","webpack://react-project/./src/modules/Diary/DiaryAddProductForm/ProductSelector/productSelector.module.css?ce86","modules/Diary/DiaryAddProductForm/ProductSelector/ProductSelector.jsx","modules/Diary/DiaryAddProductForm/fields.js","shared/services/API/product-search.js","webpack://react-project/./src/modules/Diary/DiaryAddProductForm/diaryAddProductForm.module.scss?3041","modules/Diary/DiaryAddProductForm/DiaryAddProductForm.jsx","webpack://react-project/./src/modules/Diary/DiaryProductsList/DiaryProductsListItem/diaryProductsListItem.module.scss?c1b8","modules/Diary/DiaryProductsList/DiaryProductsListItem/DiaryProductsListItem.jsx","webpack://react-project/./src/modules/Diary/DiaryProductsList/diaryProductsList.module.scss?21a0","modules/Diary/DiaryProductsList/DiaryProductsList.jsx","webpack://react-project/./src/modules/Diary/diary.module.scss?7f94","modules/Diary/Diary.jsx","webpack://react-project/./src/pages/DiaryPage/diaryPage.module.scss?c2cf","pages/DiaryPage/DiaryPage.jsx","redux/summary/summary-selectors.js","webpack://react-project/./src/shared/components/Button/button.module.scss?9580","shared/components/Button/Button.jsx","webpack://react-project/./src/shared/components/ModalText/modalText.module.scss?b17a","shared/components/ModalText/ModalList/ModalList.jsx","shared/components/ModalText/ModalText.jsx","webpack://react-project/./src/shared/components/Modal/modal.module.scss?c80f","shared/components/Modal/Modal.jsx","shared/hooks/useForm.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backbox\":\"RightSideBar_backbox__f1uHh\",\"box\":\"RightSideBar_box__5rTAJ\",\"title\":\"RightSideBar_title__b9qBg\",\"flexbox\":\"RightSideBar_flexbox__Ultvk\",\"list\":\"RightSideBar_list__RNeJX\",\"item\":\"RightSideBar_item__0V+B1\",\"sub_title\":\"RightSideBar_sub_title__A7b6T\",\"text\":\"RightSideBar_text__J6xPs\"};","import style from \"./RightSideBar.module.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  summary,\r\n  getdate,\r\n  getFoodNotRecommended,\r\n} from \"../../redux/summary/summary-selectors\";\r\n\r\nconst RightSideBar = () => {\r\n  const daySummary = useSelector(summary);\r\n  const currentDate = useSelector(getdate);\r\n  const foodNotRecommended = useSelector(getFoodNotRecommended);\r\n\r\n  const newCurrentDate = () => {\r\n    if (currentDate) {\r\n      const a = currentDate.split(\"\");\r\n      a.splice(4, 1, \"/\");\r\n      const b = a;\r\n      b.splice(7, 1, \"/\");\r\n\r\n      return b.join(\"\");\r\n    }\r\n    return;\r\n  };\r\n\r\n  const newSummary = () => {\r\n    if (daySummary.kcalLeft) {\r\n      const dataValuesToMathFloor = {};\r\n\r\n      Object.entries(daySummary).forEach(([key, value]) => {\r\n        dataValuesToMathFloor[key] = Math.floor(value);\r\n      });\r\n\r\n      const { kcalLeft, kcalConsumed, dailyRate, percentsOfDailyRate } =\r\n        dataValuesToMathFloor;\r\n\r\n      return {\r\n        kcalLeft,\r\n        kcalConsumed,\r\n        dailyRate,\r\n        percentsOfDailyRate,\r\n      };\r\n    }\r\n    return {\r\n      kcalLeft: \"000\",\r\n      kcalConsumed: \"000\",\r\n      dailyRate: \"000\",\r\n      percentsOfDailyRate: \"000\",\r\n    };\r\n  };\r\n\r\n  const foodNotRecommendedList = () => {\r\n    const elements = foodNotRecommended.map((el) => <li key={el}>{el}</li>);\r\n\r\n    return <ol>{elements}</ol>;\r\n  };\r\n\r\n  const { kcalLeft, kcalConsumed, dailyRate, percentsOfDailyRate } =\r\n    newSummary();\r\n\r\n  return (\r\n    <>\r\n      <div className={style.backbox}>\r\n        <div className={style.box}>\r\n          <div className={style.summary}>\r\n            <h3 className={style.title}>{`Summary for ${newCurrentDate()}`}</h3>\r\n            <div className={style.flexbox}>\r\n              <ul className={style.list}>\r\n                <li className={style.item}>Left</li>\r\n                <li className={style.item}>Consumed</li>\r\n                <li className={style.item}>Daily rate</li>\r\n                <li className={style.item}>Daily percentage</li>\r\n              </ul>\r\n              <ul className={style.list}>\r\n                <li className={style.item}>\r\n                  <span className=\"{style.number}\">{kcalLeft}</span> kcal\r\n                </li>\r\n                <li className={style.item}>\r\n                  <span className=\"{style.number}\">{kcalConsumed}</span> kcal\r\n                </li>\r\n                <li className={style.item}>\r\n                  <span className=\"{style.number}\">{dailyRate}</span> kcal\r\n                </li>\r\n                <li className={style.item}>\r\n                  <span className=\"{style.number}\">{percentsOfDailyRate}</span>{\" \"}\r\n                  %\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className={style.food}>\r\n            <h3 className={style.sub_title}>Food not recommended</h3>\r\n            {foodNotRecommended ? (\r\n              foodNotRecommendedList()\r\n            ) : (\r\n              <p className={style.text}>Your diet will be displayed here</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RightSideBar;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"diaryDateСalendar_wrapper__1gq55\",\"datePicker\":\"diaryDateСalendar_datePicker__FksKS\",\"icon\":\"diaryDateСalendar_icon__cZyaP\"};","import { useEffect, useState } from \"react\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport sprite from \"../../../assets/svg/sprite.svg\";\r\nimport styles from \"./diaryDateСalendar.module.scss\";\r\n\r\nconst DiaryDateCalendar = ({ fetchDayInfo }) => {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n\r\n  const prepareDate = (dateOld) => {\r\n    return { date: dateOld.toISOString().slice(0, 10) };\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDayInfo(prepareDate(startDate));\r\n  }, [fetchDayInfo, startDate]);\r\n\r\n  return (\r\n    <div className=\"wrapper_container\">\r\n      <div className={styles.wrapper}>\r\n        <DatePicker\r\n          className={styles.datePicker}\r\n          selected={startDate}\r\n          onChange={(date) => setStartDate(date)}\r\n          dateFormat=\"dd.MM.yyyy\"\r\n        />\r\n        <svg className={styles.icon}>\r\n          <use href={sprite + \"#icon-calendar\"}></use>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiaryDateCalendar;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"circleButton_btn__2aj1H\",\"mobile\":\"circleButton_mobile__5dTLh\",\"icon\":\"circleButton_icon__AB0yh\"};","import PropTypes from \"prop-types\";\r\nimport sprite from \"../../../assets/svg/sprite.svg\";\r\nimport styles from \"./circleButton.module.scss\";\r\n\r\nconst CircleButton = ({ type, label, mobile, iconNameInSprite, onClick }) => {\r\n  const chooseClass = () => {\r\n    return mobile ? `${styles.btn} ${styles.mobile}` : styles.btn;\r\n  };\r\n  return (\r\n    <button\r\n      className={chooseClass()}\r\n      type={type}\r\n      aria-label={label}\r\n      onClick={onClick}\r\n    >\r\n      <svg className={styles.icon}>\r\n        <use href={sprite + `#icon-${iconNameInSprite}`}></use>\r\n      </svg>\r\n    </button>\r\n  );\r\n};\r\n\r\nCircleButton.defaultProps = {\r\n  type: \"button\",\r\n  label: \"Button\",\r\n  mobile: false,\r\n  onClick: () => {},\r\n};\r\n\r\nCircleButton.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  mobile: PropTypes.bool.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CircleButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"select\":\"productSelector_select__gPhvF\"};","import PropTypes from \"prop-types\";\r\nimport styles from \"./productSelector.module.css\";\r\n\r\nconst ProductSelector = ({ list, onChange }) => {\r\n  const preparedList = list.length > 10 ? list.slice(0, 10) : list;\r\n  const elements = preparedList.map((product) => {\r\n    const { _id, title } = product;\r\n    const { ru } = title;\r\n    return (\r\n      <option key={_id} id={_id} value={ru}>\r\n        {ru}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  const selectHandler = ({ target }) => {\r\n    const { value } = target;\r\n    onChange(value);\r\n  };\r\n\r\n  return (\r\n    <select className={styles.select} onChange={selectHandler}>\r\n      {elements}\r\n    </select>\r\n  );\r\n};\r\n\r\nProductSelector.defaultProps = {\r\n  list: [],\r\n  onChange: () => {},\r\n};\r\n\r\nProductSelector.propTypes = {\r\n  list: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      _id: PropTypes.string.isRequired,\r\n      title: PropTypes.shape({\r\n        ru: PropTypes.string.isRequired,\r\n      }),\r\n    })\r\n  ).isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ProductSelector;\r\n","const fields = {\r\n  product: {\r\n    name: \"product\",\r\n    required: true,\r\n    type: \"text\",\r\n  },\r\n  weight: {\r\n    name: \"weight\",\r\n    required: true,\r\n    type: \"number\",\r\n    min: \"1\",\r\n    max: \"3000\",\r\n    title: \"Input weight product in (gram)\",\r\n  },\r\n};\r\n\r\nexport default fields;\r\n","import { instance } from \"./auth\";\r\n\r\nexport const searchProduct = async (query) => {\r\n  const { data } = await instance.get(`/product?search=${query}`);\r\n  return data;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"addForm\":\"diaryAddProductForm_addForm__6LUsR\",\"wrapperProduct\":\"diaryAddProductForm_wrapperProduct__hr9La\",\"wrapperGrams\":\"diaryAddProductForm_wrapperGrams__4Ji+U\",\"label\":\"diaryAddProductForm_label__g2eLt\",\"labelGrams\":\"diaryAddProductForm_labelGrams__sdZQs\",\"input\":\"diaryAddProductForm_input__3k+X3\"};","import { useEffect } from \"react\";\r\nimport CircleButton from \"../../../shared/components/CircleButton/CircleButton\";\r\nimport ProductSelector from \"./ProductSelector/ProductSelector\";\r\nimport fields from \"./fields\";\r\nimport useForm from \"../../../shared/hooks/useForm\";\r\nimport { searchProduct } from \"../../../shared/services/API/product-search\";\r\nimport styles from \"./diaryAddProductForm.module.scss\";\r\n\r\nconst initialState = {\r\n  product: \"\",\r\n  foundProducts: [],\r\n  currentProduct: \"\",\r\n  id: null,\r\n  weight: \"\",\r\n};\r\nconst DiaryAddProductForm = ({ onSubmit }) => {\r\n  const { state, setState, handleChange, handleSubmit } = useForm({\r\n    onSubmit,\r\n    initialState,\r\n  });\r\n  const { product, foundProducts, currentProduct, weight } = state;\r\n\r\n  const handleFocus = () => {\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        foundProducts: [],\r\n        currentProduct: \"\",\r\n        id: null,\r\n      };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const findProduct = async (product) => {\r\n      try {\r\n        const result = await searchProduct(product);\r\n        setState((prevState) => ({ ...prevState, foundProducts: result }));\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    if (currentProduct) {\r\n      return;\r\n    }\r\n    if (product.length > 2) {\r\n      findProduct(product);\r\n    }\r\n  }, [product, currentProduct, setState]);\r\n\r\n  const setCurrentProduct = (selectedProduct) => {\r\n    const requiredId = foundProducts.find(\r\n      (product) => product.title.ru === selectedProduct\r\n    )._id;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      product: selectedProduct,\r\n      currentProduct: selectedProduct,\r\n      foundProducts: [],\r\n      id: requiredId,\r\n    }));\r\n  };\r\n  return (\r\n    <div className=\"wrapper_container\">\r\n      <form className={styles.addForm} onSubmit={handleSubmit}>\r\n        <div className={styles.wrapperProduct}>\r\n          <label htmlFor={\"product\"} className={styles.label}>\r\n            Введите название продукта\r\n          </label>\r\n          <input\r\n            name=\"product\"\r\n            id={\"product\"}\r\n            className={styles.input}\r\n            value={product}\r\n            onChange={handleChange}\r\n            onFocus={handleFocus}\r\n            autoComplete=\"off\"\r\n            {...fields.product}\r\n          />\r\n          {foundProducts.length > 0 && (\r\n            <ProductSelector\r\n              list={foundProducts}\r\n              onChange={setCurrentProduct}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className={styles.wrapperGrams}>\r\n          <label htmlFor={\"weight\"} className={styles.labelGrams}>\r\n            Grams\r\n          </label>\r\n          <input\r\n            id={\"weight\"}\r\n            className={styles.input}\r\n            {...fields.weight}\r\n            value={weight}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <CircleButton\r\n          type=\"submit\"\r\n          label=\"Add product button\"\r\n          iconNameInSprite=\"add\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiaryAddProductForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"diaryProductsListItem_listItem__sfxH7\",\"item\":\"diaryProductsListItem_item__wfLrd\",\"calories\":\"diaryProductsListItem_calories__GzQnx\",\"grams\":\"diaryProductsListItem_grams__UeXqj\",\"product\":\"diaryProductsListItem_product__KiujG\",\"btn\":\"diaryProductsListItem_btn__2B-43\",\"icon\":\"diaryProductsListItem_icon__kttsa\"};","import PropTypes from \"prop-types\";\r\nimport sprite from \"../../../../assets/svg/sprite.svg\";\r\nimport styles from \"./diaryProductsListItem.module.scss\";\r\n\r\nconst DiaryListItem = ({ title, weight, kcal, id, onClick }) => {\r\n  return (\r\n    <li className={styles.listItem} key={id}>\r\n      <span className={styles.product}>{title}</span>\r\n      <span className={styles.grams}>{weight}</span>\r\n      <span className={styles.calories}>{Math.round(kcal)} kcal</span>\r\n      <button\r\n        className={styles.btn}\r\n        onClick={() => onClick(id)}\r\n        aria-label=\"button delete element\"\r\n      >\r\n        <svg className={styles.icon}>\r\n          <use href={sprite + \"#icon-remove\"}></use>\r\n        </svg>\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nDiaryListItem.propTypes = {\r\n  eatenProducts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      weight: PropTypes.number.isRequired,\r\n      kcal: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default DiaryListItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"diaryProductsList_list__HbP9-\",\"warn\":\"diaryProductsList_warn__wziG9\"};","import DiaryProductsListItem from \"./DiaryProductsListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./diaryProductsList.module.scss\";\r\n\r\nconst DiaryProductsList = ({ eatenProducts, onClick }) => {\r\n  const productAnswer = () => {\r\n    if (eatenProducts.length > 0) {\r\n      const elements = eatenProducts.map(({ title, weight, kcal, id }) => (\r\n        <DiaryProductsListItem\r\n          onClick={onClick}\r\n          key={id}\r\n          title={title}\r\n          weight={weight}\r\n          kcal={kcal}\r\n          id={id}\r\n        />\r\n      ));\r\n      return <ul className={styles.list}>{elements.reverse()}</ul>;\r\n    }\r\n    return <p className={styles.warn}>List empty, add new product</p>;\r\n  };\r\n\r\n  return <div className=\"wrapper_container\">{productAnswer()}</div>;\r\n};\r\n\r\nDiaryProductsList.defaultProps = {\r\n  eatenProducts: [],\r\n};\r\n\r\nDiaryProductsList.propTypes = {\r\n  eatenProducts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      weight: PropTypes.number.isRequired,\r\n      kcal: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default DiaryProductsList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"diary_wrapper__XjRIh\",\"btn\":\"diary_btn__-pfQA\"};","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport DiaryDateCalendar from \"./DiaryDateСalendar/DiaryDateСalendar\";\r\nimport DiaryAddProductForm from \"./DiaryAddProductForm/DiaryAddProductForm\";\r\nimport DiaryProductsList from \"./DiaryProductsList\";\r\nimport CircleButton from \"../../shared/components/CircleButton/CircleButton\";\r\nimport Loader from \"../../shared/components/Loader/Loader\";\r\nimport Modal from \"../../shared/components/Modal\";\r\nimport ModalText from \"../../shared/components/ModalText\";\r\n\r\nimport {\r\n  addProduct,\r\n  dayInfo,\r\n  removeProduct,\r\n} from \"../../redux/summary/summary-operations\";\r\n\r\nimport { getSummary } from \"../../redux/summary/summary-selectors\";\r\n\r\nimport {\r\n  setDate,\r\n  updateEatenProducts,\r\n} from \"../../redux/summary/summary-slice\";\r\nimport styles from \"./diary.module.scss\";\r\n\r\nconst Diary = () => {\r\n  const [modal, setModal] = useState(false);\r\n  const toggleModal = () => {\r\n    setModal((prevState) => !prevState);\r\n  };\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const summaryRedux = useSelector(getSummary);\r\n  const { loading, error, eatenProducts, dayId, date } = summaryRedux;\r\n\r\n  const getDayInfo = useCallback(\r\n    (data) => {\r\n      dispatch(setDate(data));\r\n      dispatch(dayInfo(data));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const relogin = (error) => {\r\n    if (error?.status === 401) {\r\n      navigate(\"/login\");\r\n    }\r\n  };\r\n\r\n  const addNewProduct = useCallback(\r\n    (productData) => {\r\n      const { id, weight } = productData;\r\n      const updatedWeight = Number(weight);\r\n\r\n      const totalProductInfo = {\r\n        productId: id,\r\n        weight: updatedWeight,\r\n        date,\r\n      };\r\n      dispatch(addProduct(totalProductInfo));\r\n    },\r\n    [date, dispatch]\r\n  );\r\n\r\n  const deleteProductItem = useCallback(\r\n    (id) => {\r\n      const data = {\r\n        dayId,\r\n        eatenProductId: id,\r\n      };\r\n      dispatch(removeProduct(data));\r\n      dispatch(updateEatenProducts(id));\r\n    },\r\n    [dayId, dispatch]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.wrapper}>\r\n        <DiaryDateCalendar fetchDayInfo={getDayInfo} />\r\n        <DiaryAddProductForm onSubmit={addNewProduct} />\r\n        <DiaryProductsList\r\n          eatenProducts={eatenProducts}\r\n          onClick={deleteProductItem}\r\n        />\r\n        <div className={styles.btn}>\r\n          <CircleButton\r\n            type=\"button\"\r\n            label=\"Add product button\"\r\n            mobile={true}\r\n            iconNameInSprite=\"add\"\r\n            onClick={toggleModal}\r\n          />\r\n        </div>\r\n      </div>\r\n      {error && relogin(error)}\r\n      {loading && <Loader />}\r\n      {modal && (\r\n        <Modal onClose={toggleModal}>\r\n          <ModalText />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Diary;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"diaryPage_wrapper__3dexS\",\"diary\":\"diaryPage_diary__DOxYG\"};","import Diary from \"../../modules/Diary/Diary\";\r\nimport RightSideBar from \"../../modules/RightSideBar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getErrorLoadingSummary } from \"../../redux/summary/summary-selectors\";\r\nimport { errorChecker } from \"../../shared/utils/randomFunctions\";\r\n\r\nimport style from \"./diaryPage.module.scss\";\r\nconst DiaryPage = () => {\r\n  const { error } = useSelector(getErrorLoadingSummary);\r\n\r\n  return (\r\n    <>\r\n      <div className={style.wrapper}>\r\n        <div className={style.diary}>\r\n          <Diary />\r\n        </div>\r\n\r\n        <RightSideBar />\r\n      </div>\r\n      {error && errorChecker(error)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DiaryPage;\r\n","export const getSummary = (store) => {\r\n  return store.summary;\r\n};\r\nexport const summary = (store) => {\r\n  return store.summary.summary;\r\n};\r\nexport const getdate = (store) => {\r\n  return store.summary.date;\r\n};\r\nexport const getErrorLoadingSummary = (store) => {\r\n  return { loading: store.summary.loading, error: store.summary.error };\r\n};\r\nexport const getFoodNotRecommended = (store) => {\r\n    return store.summary.notAllowedProducts;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__GLfzt\",\"btn_white\":\"button_btn_white__vYoLr\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./button.module.scss\";\r\n\r\nconst Button = (props) => {\r\n  const { type, text, onClick, white } = props;\r\n  const setClass = () => {\r\n    return white? s.btn_white : s.btn;\r\n  }\r\n  return (\r\n    <button className={setClass()} onClick={onClick} type={type}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  white: false,\r\n  type: \"submit\",\r\n  onClick: () => {},\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"modalText_title__+vC79\",\"amount\":\"modalText_amount__JAcX+\",\"text\":\"modalText_text__eUWXn\",\"sub_title\":\"modalText_sub_title__W-6QY\",\"list\":\"modalText_list__YYx7n\",\"item\":\"modalText_item__q9Uth\"};","import style from \"../modalText.module.scss\";\r\n\r\nconst ModalList = ({ list }) => {\r\n  const elements = () => {\r\n    if (list.length > 0) {\r\n      const items = list.map((el) => <li className={style.item} key={el}>{el}</li>);\r\n      return <ol className={style.list}>{items}</ol>;\r\n    }\r\n    return <p className={style.item}>You are allowed to eat everything</p>;\r\n  };\r\n\r\n  return elements();\r\n};\r\n\r\nexport default ModalList;\r\n","import PropTypes from \"prop-types\";\r\nimport Button from \"../Button\";\r\nimport ModalList from \"./ModalList/ModalList\";\r\nimport style from \"./modalText.module.scss\";\r\n\r\nconst ModalText = ({ calories, list, onClick }) => {\r\n  return (\r\n    <>\r\n      <h2 className={style.title}> Your recommended daily calorie intake is</h2>\r\n      <p className={style.text}>\r\n        {calories} <span className={style.amount}>ккал</span>\r\n      </p>\r\n      <h3 className={style.sub_title}>Foods you should not eat</h3>\r\n      <ModalList list={list} />\r\n\r\n      <Button type=\"button\" onClick={onClick} text=\"Start losing weight\" />\r\n    </>\r\n  );\r\n};\r\n\r\nModalText.defaultProps = {\r\n  list: [],\r\n  onClick: () => {},\r\n};\r\n\r\nModalText.propTypes = {\r\n  calories: PropTypes.number.isRequired,\r\n  list: PropTypes.array,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ModalText;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"modal_overlay__R++hW\",\"modal\":\"modal_modal__2Pbuy\",\"close_btn\":\"modal_close_btn__DTBAR\",\"container\":\"modal_container__Jd1Z7\",\"close_icon\":\"modal_close_icon__mvDI0\"};","import { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./modal.module.scss\";\r\nimport sprite from \"../../../assets/svg/sprite.svg\";\r\n\r\nconst modalPlace = document.getElementById(\"modal-root\");\r\n\r\nconst Modal = (props) => {\r\n  const { children, onClose } = props;\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handleClose);\r\n    return () => document.removeEventListener(\"keydown\", handleClose);\r\n  }, []);\r\n\r\n  function handleClose(event) {\r\n    const { target, currentTarget, code } = event;\r\n    if (target === currentTarget || code === \"Escape\") {\r\n      onClose();\r\n    }\r\n  }\r\n\r\n  return createPortal(\r\n    <div onClick={handleClose} className={style.overlay}>\r\n      <div className={style.modal}>\r\n        <button\r\n          className={style.close_btn}\r\n          type=\"button\"\r\n          aria-label=\"button close\"\r\n          onClick={onClose}\r\n        >\r\n          <svg className={style.close_icon}>\r\n            <use href={sprite + \"#icon-close\"} />\r\n          </svg>\r\n        </button>\r\n        <div className={style.container}>{children}</div>\r\n      </div>\r\n    </div>,\r\n    modalPlace\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useForm = ({ onSubmit, initialState, isReset }) => {\r\n  const [state, setState] = useState({ ...initialState });\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { name, value, type, checked } = target;\r\n    const newValue = type === \"checkbox\" ? checked : value;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: newValue,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit({ ...state });\r\n    if (isReset) {\r\n      setState({ ...initialState });\r\n    }\r\n  };\r\n\r\n  return { state, setState, handleChange, handleSubmit };\r\n};\r\n\r\nuseForm.defaultProps = {\r\n  onSubmit: () => {},\r\n  initialState: {},\r\n  isReset: true,\r\n};\r\n\r\nuseForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  initialState: PropTypes.shape.isRequired,\r\n  isReset: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default useForm;\r\n"],"names":["daySummary","useSelector","summary","currentDate","getdate","foodNotRecommended","getFoodNotRecommended","kcalLeft","dataValuesToMathFloor","Object","entries","forEach","key","value","Math","floor","kcalConsumed","dailyRate","percentsOfDailyRate","newSummary","className","style","a","split","splice","b","join","newCurrentDate","elements","map","el","foodNotRecommendedList","fetchDayInfo","useState","Date","startDate","setStartDate","useEffect","date","toISOString","slice","styles","selected","onChange","dateFormat","href","sprite","CircleButton","type","label","mobile","iconNameInSprite","onClick","defaultProps","ProductSelector","list","length","product","_id","ru","title","id","target","name","required","weight","min","max","searchProduct","query","instance","data","initialState","foundProducts","currentProduct","onSubmit","useForm","state","setState","handleChange","handleSubmit","findProduct","result","prevState","console","log","htmlFor","onFocus","autoComplete","fields","selectedProduct","requiredId","find","kcal","round","DiaryProductsList","eatenProducts","DiaryProductsListItem","reverse","productAnswer","modal","setModal","toggleModal","dispatch","useDispatch","navigate","useNavigate","summaryRedux","getSummary","loading","error","dayId","getDayInfo","useCallback","setDate","dayInfo","addNewProduct","productData","totalProductInfo","productId","Number","addProduct","deleteProductItem","eatenProductId","removeProduct","updateEatenProducts","status","relogin","Loader","Modal","onClose","ModalText","getErrorLoadingSummary","RightSideBar","errorChecker","store","notAllowedProducts","Button","props","text","white","s","items","calories","modalPlace","document","getElementById","children","handleClose","event","currentTarget","code","addEventListener","removeEventListener","createPortal","isReset","checked","newValue","e","preventDefault","propTypes","PropTypes"],"sourceRoot":""}